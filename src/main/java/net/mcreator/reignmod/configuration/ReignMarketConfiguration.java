package net.mcreator.reignmod.configuration;

import net.minecraftforge.common.ForgeConfigSpec;

public class ReignMarketConfiguration {
	public static final ForgeConfigSpec.Builder BUILDER = new ForgeConfigSpec.Builder();
	public static final ForgeConfigSpec SPEC;

	public static final ForgeConfigSpec.ConfigValue<Double> LOGS_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> OAK_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> SPRUCE_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> BIRCH_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> ACACIA_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> DARK_OAK_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> JUNGLE_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> MANGROVE_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> CHERRY_LOG;
	public static final ForgeConfigSpec.ConfigValue<Double> FUEL_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> COAL;
	public static final ForgeConfigSpec.ConfigValue<Double> CHARCOAL;
	public static final ForgeConfigSpec.ConfigValue<Double> ORES_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> RAW_COPPER;
	public static final ForgeConfigSpec.ConfigValue<Double> RAW_IRON;
	public static final ForgeConfigSpec.ConfigValue<Double> RAW_GOLD;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND;
	public static final ForgeConfigSpec.ConfigValue<Double> LAPIS_LAZULI;
	public static final ForgeConfigSpec.ConfigValue<Double> REDSTONE;
	public static final ForgeConfigSpec.ConfigValue<Double> EMERALD;
	public static final ForgeConfigSpec.ConfigValue<Double> NETHERITE_SCRAP;
	public static final ForgeConfigSpec.ConfigValue<Double> INGOTS_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> COPPER_INGOT;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_INGOT;
	public static final ForgeConfigSpec.ConfigValue<Double> GOLD_INGOT;
	public static final ForgeConfigSpec.ConfigValue<Double> NETHERITE_INGOT;
	public static final ForgeConfigSpec.ConfigValue<Double> TOOLS_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_SWORD;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_PICKAXE;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_AXE;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_SHOVEL;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_HELMET;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_CHESTPLATE;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_LEGGINGS;
	public static final ForgeConfigSpec.ConfigValue<Double> IRON_BOOTS;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_SWORD;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_PICKAXE;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_AXE;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_SHOVEL;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_HELMET;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_CHESTPLATE;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_LEGGINGS;
	public static final ForgeConfigSpec.ConfigValue<Double> DIAMOND_BOOTS;
	public static final ForgeConfigSpec.ConfigValue<Double> SHIELD;
	public static final ForgeConfigSpec.ConfigValue<Double> SHEARS;
	public static final ForgeConfigSpec.ConfigValue<Double> BOW;
	public static final ForgeConfigSpec.ConfigValue<Double> FOOD_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> BREAD;
	public static final ForgeConfigSpec.ConfigValue<Double> BAKED_POTATO;
	public static final ForgeConfigSpec.ConfigValue<Double> PUMPKIN_PIE;
	public static final ForgeConfigSpec.ConfigValue<Double> CARROT;
	public static final ForgeConfigSpec.ConfigValue<Double> COOKED_BEEF;
	public static final ForgeConfigSpec.ConfigValue<Double> COOKED_PORKCHOP;
	public static final ForgeConfigSpec.ConfigValue<Double> COOKED_CHICKEN;
	public static final ForgeConfigSpec.ConfigValue<Double> COOKED_COD;
	public static final ForgeConfigSpec.ConfigValue<Double> HAY_BLOCK;
	public static final ForgeConfigSpec.ConfigValue<Double> HONEY_BOTTLE;
	public static final ForgeConfigSpec.ConfigValue<Double> BLOCKS_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> COBBLESTONE;
	public static final ForgeConfigSpec.ConfigValue<Double> SAND;
	public static final ForgeConfigSpec.ConfigValue<Double> WHITE_WOOL;
	public static final ForgeConfigSpec.ConfigValue<Double> CLAY;
	public static final ForgeConfigSpec.ConfigValue<Double> GLASS_BOTTLE;
	public static final ForgeConfigSpec.ConfigValue<Double> ARROW;
	public static final ForgeConfigSpec.ConfigValue<Double> EXPERIENCE_BOTTLE;
	public static final ForgeConfigSpec.ConfigValue<Double> GUNPOWDER;
	public static final ForgeConfigSpec.ConfigValue<Double> BONE;
	public static final ForgeConfigSpec.ConfigValue<Double> STRING;
	public static final ForgeConfigSpec.ConfigValue<Double> SLIME_BALL;
	public static final ForgeConfigSpec.ConfigValue<Double> PAPER;
	public static final ForgeConfigSpec.ConfigValue<Double> FEATHER;
	public static final ForgeConfigSpec.ConfigValue<Double> GLOWSTONE_DUST;
	public static final ForgeConfigSpec.ConfigValue<Double> ENDER_PEARL;
	public static final ForgeConfigSpec.ConfigValue<Double> LEATHER;
	public static final ForgeConfigSpec.ConfigValue<Double> BLAZE_ROD;
	public static final ForgeConfigSpec.ConfigValue<Double> OTHER_MULTIPLIER;
	public static final ForgeConfigSpec.ConfigValue<Double> TOOLS_MAX_AMOUNT;
	public static final ForgeConfigSpec.ConfigValue<Double> GOODS_MAX_AMOUNT;
	static {
		BUILDER.push("Logs");
		LOGS_MULTIPLIER = BUILDER.comment("price coefficient for logs [0.5 - 2.0]").define("logs_multiplier", (double) 1);
		OAK_LOG = BUILDER.define("oak_log", (double) 4);
		SPRUCE_LOG = BUILDER.define("spruce_log", (double) 4);
		BIRCH_LOG = BUILDER.define("birch_log", (double) 4);
		ACACIA_LOG = BUILDER.define("acacia_log", (double) 4);
		DARK_OAK_LOG = BUILDER.define("dark_oak_log", (double) 4);
		JUNGLE_LOG = BUILDER.define("jungle_log", (double) 4);
		MANGROVE_LOG = BUILDER.define("mangrove_log", (double) 4);
		CHERRY_LOG = BUILDER.define("cherry_log", (double) 4);
		BUILDER.pop();
		BUILDER.push("Fuel");
		FUEL_MULTIPLIER = BUILDER.comment("price coefficient for coal [0.5 - 2.0]").define("fuel_multiplier", (double) 1);
		COAL = BUILDER.define("coal", (double) 4);
		CHARCOAL = BUILDER.define("charcoal", (double) 4);
		BUILDER.pop();
		BUILDER.push("Ores");
		ORES_MULTIPLIER = BUILDER.comment("price coefficient for ores [0.5 - 2.0]").define("ores_multiplier", (double) 1);
		RAW_COPPER = BUILDER.define("raw_copper", (double) 4);
		RAW_IRON = BUILDER.define("raw_iron", (double) 4);
		RAW_GOLD = BUILDER.define("raw_gold", (double) 4);
		DIAMOND = BUILDER.define("diamond", (double) 32);
		LAPIS_LAZULI = BUILDER.define("lapis_lazuli", (double) 4);
		REDSTONE = BUILDER.define("redstone_dust", (double) 4);
		EMERALD = BUILDER.define("emerald", (double) 48);
		NETHERITE_SCRAP = BUILDER.define("netherite_scrap", (double) 240);
		BUILDER.pop();
		BUILDER.push("Ingots");
		INGOTS_MULTIPLIER = BUILDER.comment("price coefficient for ingots [0.5 - 2.0]").define("ingots_multiplier", (double) 1);
		COPPER_INGOT = BUILDER.define("copper_ingot", (double) 4);
		IRON_INGOT = BUILDER.define("iron_ingot", (double) 6);
		GOLD_INGOT = BUILDER.define("gold_ingot", (double) 6);
		NETHERITE_INGOT = BUILDER.define("netherite_ingot", (double) 1024);
		BUILDER.pop();
		BUILDER.push("Tools");
		TOOLS_MULTIPLIER = BUILDER.comment("price coefficient for tools [0.5 - 2.0]").define("tools_multiplier", (double) 1);
		IRON_SWORD = BUILDER.define("iron_sword", (double) 10);
		IRON_PICKAXE = BUILDER.define("iron_pickaxe", (double) 14);
		IRON_AXE = BUILDER.define("iron_axe", (double) 14);
		IRON_SHOVEL = BUILDER.define("iron_shovel", (double) 6);
		IRON_HELMET = BUILDER.define("iron_helmet", (double) 24);
		IRON_CHESTPLATE = BUILDER.define("iron_chestplate", (double) 40);
		IRON_LEGGINGS = BUILDER.define("iron_leggings", (double) 32);
		IRON_BOOTS = BUILDER.define("iron_boots", (double) 20);
		DIAMOND_SWORD = BUILDER.define("diamond_sword", (double) 72);
		DIAMOND_PICKAXE = BUILDER.define("diamond_pickaxe", (double) 104);
		DIAMOND_AXE = BUILDER.define("diamond_axe", (double) 104);
		DIAMOND_SHOVEL = BUILDER.define("diamond_shovel", (double) 40);
		DIAMOND_HELMET = BUILDER.define("diamond_helmet", (double) 172);
		DIAMOND_CHESTPLATE = BUILDER.define("diamond_chestplate", (double) 300);
		DIAMOND_LEGGINGS = BUILDER.define("diamond_leggings", (double) 236);
		DIAMOND_BOOTS = BUILDER.define("diamond_boots", (double) 140);
		SHIELD = BUILDER.define("shield", (double) 10);
		SHEARS = BUILDER.define("shears", (double) 10);
		BOW = BUILDER.define("bow", (double) 16);
		BUILDER.pop();
		BUILDER.push("Food");
		FOOD_MULTIPLIER = BUILDER.comment("price coefficient for foods [0.5 - 2.0]").define("food_multiplier", (double) 1);
		BREAD = BUILDER.define("bread", (double) 4);
		BAKED_POTATO = BUILDER.define("baked_potato", (double) 4);
		PUMPKIN_PIE = BUILDER.define("pumpkin_pie", (double) 4);
		CARROT = BUILDER.define("carrot", (double) 4);
		COOKED_BEEF = BUILDER.define("cooked_beef", (double) 4);
		COOKED_PORKCHOP = BUILDER.define("cooked_porkchop", (double) 4);
		COOKED_CHICKEN = BUILDER.define("cooked_chicken", (double) 4);
		COOKED_COD = BUILDER.define("cooked_cod", (double) 4);
		HAY_BLOCK = BUILDER.define("hay_block", (double) 10);
		HONEY_BOTTLE = BUILDER.define("honey_bottle", (double) 8);
		BUILDER.pop();
		BUILDER.push("Blocks");
		BLOCKS_MULTIPLIER = BUILDER.comment("price coefficient for blocks [0.5 - 2.0]").define("blocks_multiplier", (double) 1);
		COBBLESTONE = BUILDER.define("cobblestone", (double) 4);
		SAND = BUILDER.define("sand", (double) 4);
		WHITE_WOOL = BUILDER.define("wool", (double) 4);
		CLAY = BUILDER.define("clay", (double) 4);
		BUILDER.pop();
		BUILDER.push("Other");
		GLASS_BOTTLE = BUILDER.define("glass_bottle", (double) 4);
		ARROW = BUILDER.define("arrow", (double) 4);
		EXPERIENCE_BOTTLE = BUILDER.define("experience_bottle", (double) 6);
		GUNPOWDER = BUILDER.define("gunpowder", (double) 6);
		BONE = BUILDER.define("bone", (double) 4);
		STRING = BUILDER.define("string", (double) 4);
		SLIME_BALL = BUILDER.define("slime_ball", (double) 4);
		PAPER = BUILDER.define("paper", (double) 4);
		FEATHER = BUILDER.define("feather", (double) 4);
		GLOWSTONE_DUST = BUILDER.define("glowstone_dust", (double) 4);
		ENDER_PEARL = BUILDER.define("ender_pearl", (double) 20);
		LEATHER = BUILDER.define("leather", (double) 4);
		BLAZE_ROD = BUILDER.define("blaze_rod", (double) 16);
		OTHER_MULTIPLIER = BUILDER.comment("price coefficient for other [0.5 - 2.0]").define("other_multiplier", (double) 0);
		BUILDER.pop();
		BUILDER.push("Base amount");
		TOOLS_MAX_AMOUNT = BUILDER.comment("The base number of instruments on the market").define("tools_base_amount", (double) 8);
		GOODS_MAX_AMOUNT = BUILDER.comment("The base number of goods on the market").define("goods_base_amount", (double) 640);
		BUILDER.pop();

		SPEC = BUILDER.build();
	}

}
